#include <iostream>
using namespace std;
const int N=9;
void print(int board[N][N]){
        for(int i=0;i<N;i++){
            for(int j=0;j<N;j++){
                cout<<board[i][j]<<" ";
            }
            cout<<endl;
        }
}
bool isSafe(int board[N][N],int row,int col,int num){
    for(int x=0;x<=8;x++){
        if(board[row][x]==num){
            return false;
        }
    }
    for(int x=0;x<=8;x++){
        if(board[x][col]==num){
            return false;
        }
    }
    int startrow = row-row%3;
    int startcol = col-col%3;
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            if(board[i+startrow][j+startcol]==num){
                return false;
            }
        }
    }
    return true;
}

bool solveSudoku(int board[N][N],int row,int col){
    if(row==N-1 &&col==N){
        return true;
    }
    if(col==N){
        row++;
        col=0;
    }
    if(board[row][col]>0){
        return solveSudoku(board,row,col+1);
    }
    for(int num=1;num<=9;num++){
        if(isSafe(board,row,col,num)){
            board[row][col]=num;
            if(solveSudoku(board,row,col+1)){
            return true;
         }
     }
    }

board[row][col]=0;
return false;
}

int main() {
    int board[N][N];
    for(int i=0;i<N;i++){
        for(int j=0;j<N;j++){
            cin>>board[i][j];
        }
    }
    if(solveSudoku(board,0,0)){
        print(board);
    }
    else{
        cout<<"No Solution exists";
    }

    return 0;
}
